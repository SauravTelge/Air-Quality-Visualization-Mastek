# -*- coding: utf-8 -*-
"""forecast

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h7-mW5zfcm7JasyQlhPzkSmoO1qLY-F9
"""

# !pip install pmdarima
import pickle
import pandas as pd
import numpy as np
import plotly
import matplotlib.pyplot as plt
import plotly.graph_objs as go
import json
# import plotly.express as px

df= pd.read_csv(f'{feature}.csv', index_col='Date',parse_dates=True)
df=df.drop(['Unnamed: 0'],axis=1)
df.tail()
    

from statsmodels.tsa.stattools import adfuller
def ad_test(dataset):
    dftest = adfuller(dataset, autolag = 'AIC')
    print("1. ADF : ",dftest[0])
    print("2. P-Value : ", dftest[1])
    print("3. Num Of Lags : ", dftest[2])
    print("4. Num Of Observations Used For ADF Regression:",      dftest[3])
    print("5. Critical Values :")
    for key, val in dftest[4].items():
        print("\t",key, ": ", val)
ad_test(df['AQI'])

# from pmdarima import auto_arima
import warnings
warnings.filterwarnings("ignore")

# stepwise_fit = auto_arima(df['AQI'], trace=True,suppress_warnings=True)
# stepwise_fit.summary()

from statsmodels.tsa.arima_model import ARIMA
model=ARIMA(df['AQI'],order=(1,0,0))
model=model.fit()
model.summary()

index_future_dates = pd.date_range(start='2021-01-23', end = '2021-01-29')
pred = model.predict(start=len(df),end=len(df)+6,typ='levels',dynamic=False).rename("ARIMA predictions")
pred.index = index_future_dates
print(pred)

aqival=pred.to_frame()
aqival.rename(columns={'ARIMA predictions':'AQI'}, inplace=True)
aqival.index.name = "Date"
print(aqival)

dfnew = pd.concat([df,aqival])
dfnew['Date'] = dfnew.index
    # ax= dfnew.iloc[-20:].plot.bar( y="AQI")
# matplotlib.pyplot.savefig(ax)
dumpList = [df, dfnew]
pickle.dump(dumpList,open('model1.pkl','wb'))

model1 =pickle.load(open('model1.pkl','rb'))
